<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://fonts.googleapis.com/css2?family=Epilogue:wght@300;400;600;700&display=swap"
      rel="stylesheet"
    />
    <title>Wallet</title>
    <style>
      body {
        display: flex;
        flex-direction: column;
        height: 100vh;
        margin: 0;
        background: linear-gradient(#60d3e4, #5fd4ad);
        color: rgb(0, 0, 0);
        font-family: 'Epilogue', sans-serif;
      }

      header {
        background-color: #5fd4ad;
        color: white;
        padding: 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 14px;
        font-weight: 100;
      }

      header h1 {
        margin: 0;
      }

      .toggle-container {
        display: flex;
        align-items: center;
      }

      .switch {
        width: fit-content;
        height: fit-content;
        padding: 5px;
        background: linear-gradient(rgb(211, 210, 212), rgb(245, 244, 246));
        box-shadow: inset 0px 2px 2px 0px rgba(0, 0, 0, 0.2);
        border-radius: 2mm;
        display: flex;
        perspective: 300px;
        position: relative;
      }

      .mode {
        width: 100px;
        height: 60px;
        background: linear-gradient(rgb(72, 160, 219), rgb(40, 235, 225));
        display: flex;
        align-items: center;
        justify-content: center;
        transition: 0.25s transform;
      }

      .mode:nth-child(1) {
        border-radius: 2mm 0 0 2mm;
        transform-origin: right;
      }

      .mode:nth-child(2) {
        border-radius: 0 2mm 2mm 0;
        transform-origin: left;
      }

      .text {
        font-family: 'Epilogue';
        font-size: 27px;
        font-weight: 800;
        color: transparent;
        background-color: #000000;
        background-clip: text;
        text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.3);
      }

      #toggle:not(:checked) ~ .switch .mode:nth-child(1) {
        transform: rotateY(50deg);
        background: rgb(238, 237, 239);
        box-shadow: -10px 5px 20px rgba(0, 0, 0, 0.2);
      }

      #toggle:checked ~ .switch .mode:nth-child(2) {
        transform: rotateY(-50deg);
        background: rgb(238, 237, 239);
        box-shadow: 10px 5px 20px rgba(0, 0, 0, 0.2);
      }

      #toggle:not(:checked) ~ .switch .mode:nth-child(1) .text {
        background-color: #10476e;
      }

      #toggle:checked ~ .switch .mode:nth-child(2) .text {
        background-color: #10476e;
      }

      .indicator {
        position: absolute;
        height: 52px;
        width: 0;
        font-family: Epilo;
        background: linear-gradient(
          to right,
          rgb(153, 152, 153),
          #4ac395
        );
        top: 50%;
        z-index: -1;
        transition: 0.25s;
      }

      .indicator.left {
        left: 5px;
        transform: translate(0, -50%) rotateY(-65deg);
        transform-origin: left;
      }

      .indicator.right {
        right: 5px;
        transform: translate(0, -50%) rotateY(65deg);
        transform-origin: right;
      }

      #toggle:not(:checked) ~ .switch .indicator.left {
        width: 95px;
      }

      #toggle:checked ~ .switch .indicator.right {
        width: 95px;
      }

      #toggle {
        display: none;
      }

      .container {
        display: flex;
        justify-content: space-between;
        max-width: 900px;
        margin: 60px auto 0;
        padding: 30px;
        width: 100%;
        box-sizing: border-box;
        gap: 20px;
      }

      .left-container,
      .right-container {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 20px;
      }

      .budget-container,
      .transactions-container,
      .savings-container,
      .debts-container {
        border-radius: 10px;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
        border: 1px solid rgb(255, 255, 255);
        padding: 60px;
        background-color: #ffff;
      }

      h1 {
        text-align: center;
        font-size: 18px;
      }

      h2,
      h3 {
        text-align: left;
        font-size: 16px;
      }

      label {
        display: block;
        margin: 8px 0 4px;
        font-size: 14px;
      }

      input[type='number'],
      input[type='text'],
      textarea {
        padding: 8px;
        width: 100%;
        font-size: 14px;
        border-radius: 4px;
        border: 1px solid #ddd;
        margin-bottom: 8px;
      }

      button {
        padding: 8px 16px;
        background-color: #4caf50;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        margin-top: 10px;
      }

      button:hover {
        background-color: #45a049;
      }

      .result,
      .transactions,
      .savings,
      .debts {
        margin-top: 10px;
        text-align: center;
      }

      .transaction-list,
      .debt-list {
        margin-top: 10px;
        text-align: left;
      }

      .transaction-item,
      .debt-item {
        background-color: #f9f9f9;
        margin: 6px 0;
        padding: 8px;
        border-radius: 4px;
        box-shadow: 0 0 3px rgba(0, 0, 0, 0.1);
        font-size: 14px;
      }

      .progress-bar-container {
        margin-top: 8px;
        background-color: #ddd;
        height: 16px;
        width: 100%;
        border-radius: 8px;
      }

      .progress-bar {
        background-color: #4caf50;
        height: 100%;
        border-radius: 8px;
        transition: width 0.5s ease-in-out;
      }

      a {
        color: white;
        text-decoration: none;
      }

      footer {
        background-color: #ffffff;
        color: rgb(0, 0, 0);
        text-align: center;
        padding: 20px;
        position: relative;
        bottom: 0;
        width: 100%;
      }

      .footer-content a {
        color: #000000;
        text-decoration: none;
      }

      .footer-content a:hover {
        text-decoration: underline;
      }
    </style>
  </head>
  <body>
    <header>
      <div class="toggle-container">
        <input type="checkbox" name="toggle" id="toggle" />
        <label for="toggle" class="switch">
          <div class="mode">
            <div class="text">ctrl</div>
          </div>
          <div class="mode">
            <div class="text">save</div>
          </div>
          <div class="indicator left"></div>
          <div class="indicator right"></div>
        </label>
      </div>
      <h1><a href="/homepage">Home</a></h1>
      <h1><a href="/Calendar">Calendar</a></h1>
      <h1><a href="/Stats">Stats</a></h1>
      <h1><a href="/Summary">Summary</a></h1>
    </header>
    <div class="container">
      <!-- Left Container for Budget and Transactions -->
      <div class="left-container">
        <div class="budget-container">
          <h1>Budget Planner</h1>
          <label for="monthlyBudget">Enter your monthly budget:</label>
          <input type="number" id="monthlyBudget" placeholder="Enter amount" />
          <button onclick="initializeBudget()">Set Budget</button>

          <div class="result" id="result"></div>

          <hr />

          <h2>Record a Transaction</h2>
          <label for="transactionName">Transaction Name:</label>
          <input type="text" id="transactionName" placeholder="Transaction name" />
          <label for="transactionCost">Cost (₱):</label>
          <input type="number" id="transactionCost" placeholder="Transaction cost" />
          <label for="transactionDescription">Description:</label>
          <textarea id="transactionDescription" placeholder="Short description"></textarea>
          <button onclick="addTransaction()">Add Transaction</button>

          <div class="transactions">
            <h3>Transaction List</h3>
            <div class="transaction-list" id="transactionList"></div>
          </div>
        </div>
      </div>

      <!-- Right Container for Savings and Debts -->
      <div class="right-container">
        <div class="savings-container">
          <h2>Set a Savings Goal</h2>
          <label for="savingsGoalAmount">Savings Goal (₱):</label>
          <input type="number" id="savingsGoalAmount" placeholder="Enter savings goal amount" />
          <label for="savingsContribution">Contribution (₱):</label>
          <input type="number" id="savingsContribution" placeholder="Enter savings contribution" />
          <button onclick="addSavings()">Add Savings Contribution</button>

          <div class="savings">
            <h3>Savings Progress</h3>
            <p>Target Savings: ₱<span id="savingsGoalDisplay">0</span></p>
            <p>Saved: ₱<span id="savingsSaved">0</span></p>
            <div class="progress-bar-container">
              <div id="progressBar" class="progress-bar" style="width: 0%"></div>
            </div>
          </div>
        </div>

        <div class="debts-container">
          <h2>Record a Debt</h2>
          <label for="debtName">Debt Name:</label>
          <input type="text" id="debtName" placeholder="Debt name" />
          <label for="debtAmount">Principal Amount (₱):</label>
          <input type="number" id="debtAmount" placeholder="Debt principal amount" />
          <label for="debtInterest">Interest Rate (%):</label>
          <input type="number" id="debtInterest" placeholder="Interest rate" />
          <label for="debtDueDate">Due Date:</label>
          <input type="date" id="debtDueDate" />
          <button onclick="addDebt()">Add Debt</button>

          <div class="debts">
            <h3>Debts & Liabilities</h3>
            <div class="debt-list" id="debtList"></div>
          </div>
        </div>
      </div>
    </div>

    <footer>
      <div class="footer-content">
        <p>&copy; 2025 Your Wallet App. All rights reserved.</p>
        <p>Contact us at <a href="mailto:support@yourwalletapp.com">support@yourwalletapp.com</a></p>
      </div>
    </footer>

    <script>
  let transactions = [];
  let monthlyBudget = 0;
  let weeklyBudget = 0;
  let dailyBudget = 0;
  let totalBudget = 0;

  function formatCurrency(amount) {
    return amount.toLocaleString('en-PH', {
      style: 'currency',
      currency: 'PHP',
    });
  }

  function initializeBudget() {
    monthlyBudget = parseFloat(document.getElementById("monthlyBudget").value);

    if (isNaN(monthlyBudget) || monthlyBudget <= 0) {
      alert("Please enter a valid budget amount.");
      return;
    }

    weeklyBudget = monthlyBudget / 4;
    dailyBudget = monthlyBudget / 30;
    totalBudget = monthlyBudget;

    fetch('/api/budget', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ monthlyBudget, weeklyBudget, dailyBudget }),
    })
      .then((res) => res.json())
      .then((data) => {
        console.log('Budget set:', data);
        updateBudgetDisplay();
      })
      .catch((err) => console.error('Error:', err));
  }

  function addTransaction() {
    const name = document.getElementById("transactionName").value;
    const cost = parseFloat(document.getElementById("transactionCost").value);
    const description = document.getElementById("transactionDescription").value;
    const currentDate = new Date();

    if (!name || isNaN(cost) || cost <= 0 || !description) {
      alert("Please fill in all fields with valid values.");
      return;
    }

    if (cost > totalBudget) {
      alert("Transaction exceeds your remaining budget.");
      return;
    }

    const dateTime = currentDate.toLocaleString();
    const transaction = { name, cost, description, dateTime };

    fetch('/api/transaction', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(transaction),
    })
      .then((res) => res.json())
      .then((data) => {
        console.log('Transaction added:', data);
        transactions.push(transaction);
        totalBudget -= cost;
        updateBudgetDisplay();
        displayTransactions();

        document.getElementById("transactionName").value = "";
        document.getElementById("transactionCost").value = "";
        document.getElementById("transactionDescription").value = "";
      })
      .catch((err) => console.error('Error:', err));
  }

  function displayTransactions() {
    const transactionListDiv = document.getElementById("transactionList");
    transactionListDiv.innerHTML = "";

    if (transactions.length === 0) {
      transactionListDiv.innerHTML = "<p>No transactions recorded yet.</p>";
      return;
    }

    transactions.forEach((transaction) => {
      const item = document.createElement("div");
      item.classList.add("transaction-item");
      item.innerHTML = 
        <p><strong>${transaction.name}</strong> - ${formatCurrency(transaction.cost)}</p>
        <p>${transaction.description}</p>
        <p><small>Recorded on: ${transaction.dateTime}</small></p>
      ;
      transactionListDiv.appendChild(item);
    });
  }

  function updateBudgetDisplay() {
    const totalSpent = monthlyBudget - totalBudget;
    const percentUsed = ((totalSpent / monthlyBudget) * 100).toFixed(1);

    document.getElementById("result").innerHTML = 
      <p>📅 Monthly Budget: ${formatCurrency(monthlyBudget)}</p>
      <p>💸 Total Spent: ${formatCurrency(totalSpent)}</p>
      <p>💼 Total Remaining: ${formatCurrency(totalBudget)}</p>
      <p>📊 Budget Used: ${percentUsed}%</p>
      <p>🗓️ Weekly Budget: ${formatCurrency(weeklyBudget)}</p>
      <p>📅 Daily Budget: ${formatCurrency(dailyBudget)}</p>
    ;
  }
</script>